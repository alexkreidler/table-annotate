// const PROXY_PREPEND = "https://cors-proxy.htmldriven.com/?url="
// const PROXY_2 = "https://proxy.cors.sh/"
const PROXY_3 = "https://cors-anywhere.herokuapp.com/";
const BASE_URL =
//   PROXY_3 +
  "https://www.wikidata.org/w/api.php?action=wbsearchentities&language=en&format=json&search=";

// Generated by https://quicktype.io

export interface CoreWikidataItem {
  id: string;
  /** Human readable */
  label: string;
  /** Description */
  description: string;
}

export interface WikidataResult {
  searchinfo: Searchinfo;
  search: Search[];
  "search-continue": number;
  success: number;
}

export interface Search {
  id: string;
  title: string;
  pageid: number;
  display: Display;
  repository: string;
  url: string;
  concepturi: string;
  /** Human readable */
  label: string;
  /** Description */
  description: string;
  match: Match;
  aliases?: string[];
}

export interface Display {
  label: Description;
  description: Description;
}

export interface Description {
  value: string;
  language: Language;
}

export type Language = string;
//  {
//     En = "en",
// }

export interface Match {
  type: string;
  language: Language;
  text: string;
}

export interface Searchinfo {
  search: string;
}

export const wdQuery = async (
  search: string
): Promise<CoreWikidataItem[] | null> => {
  try {
    const wdResult: WikidataResult = await (
      await fetch(BASE_URL + search)
    ).json();
    return wdResult.search;
  } catch (error) {
    console.error("Error with autocomplete", error);
  }
  return null;
};

// Generated by https://quicktype.io

export interface LnxResult {
  status: number;
  data: Data;
}

export interface Data {
  hits: Hit[];
  count: number;
  time_taken: number;
}

export interface Hit {
  doc: CoreWikidataItem;
  document_id: string;
  score: number;
}

export const betterQuery = async (
  search: string
): Promise<CoreWikidataItem[] | null> => {
  try {
    const res = await fetch(
        "http://alex-brain:8000/indexes/wikidata_entities/search",
        {
          method: "POST",
        //   mode: "no-cors",
          body: JSON.stringify({ query: search }),
          headers: {
            "Content-Type": "application/json",
          },
        }
      )
    console.log(res);
      
    const results: LnxResult = await (res).json();
    return results.data.hits.map((h) => h.doc);
  } catch (error) {
    console.error("Error with autocomplete", error);
  }

  return null;
};
